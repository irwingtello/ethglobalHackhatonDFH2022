{"version":3,"file":"index.js","sources":["../src/util.ts","../src/verifyIdToken.ts","../src/Client.ts"],"sourcesContent":["import {createHash, randomBytes} from 'crypto'\n\nexport const getRandomBytes = (length: number) => randomBytes(length)\n\nconst pkceMask =\n  '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_~.'\n\nconst generateCodeVerifier = (length: number) => {\n  return Array.from(getRandomBytes(length))\n    .map(v => pkceMask[v % pkceMask.length])\n    .join('')\n}\n\nexport const generateCodeChallengeAndVerifier = async (\n  length = 43,\n  method = 'S256',\n): Promise<{verifier: string; challenge: string}> => {\n  const verifier = generateCodeVerifier(length)\n\n  switch (method) {\n    case 'plain':\n      return {verifier, challenge: verifier}\n    case 'S256':\n      return {verifier, challenge: toUrlEncodedBase64(sha256(verifier))}\n    default:\n      throw new Error('bad challenge method')\n  }\n}\n\nexport const sha256 = (s: string): ArrayBuffer => {\n  return createHash('sha256').update(new TextEncoder().encode(s)).digest()\n    .buffer\n}\n\nexport const toBase64 = (buf: ArrayBuffer) => {\n  return Buffer.from(buf).toString('base64')\n}\n\nexport const toUrlEncodedBase64 = (buf: ArrayBuffer) => {\n  return toBase64(buf).replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_')\n}\n\nexport const textEncoder = new TextEncoder()\nexport const textDecoder = new TextDecoder()\n\nexport const uniqueElements = (arr: any[]): any[] => Array.from(new Set(arr))\n\nexport const getSortedScope = (scope: string) =>\n  uniqueElements(scope.trim().split(/\\s+/)).sort().join(' ')\n\nexport const recordCacheKey = (\n  record: Record<string, string | undefined>,\n): string => {\n  const params = new URLSearchParams(\n    Object.entries(record).filter(([, v]) => v != null) as string[][],\n  )\n  params.sort()\n  return params.toString()\n}\n","import {IdToken} from '@uauth/common'\nimport jwt from 'jsonwebtoken'\nimport jwkToPem from 'jwk-to-pem'\n\nconst verifyIdToken = async (\n  jwks_uri: string | undefined,\n  jwks: string | undefined,\n  id_token: string,\n  nonce: string,\n): Promise<IdToken> => {\n  let secretOrPublicKey: jwt.Secret | jwt.GetPublicKeyOrSecret\n  if (jwks_uri) {\n    secretOrPublicKey = (header, cb) => {\n      fetch(jwks_uri)\n        .then(res => res.json())\n        .then(({keys}) => {\n          const key = keys.find(k => k.kid === header.kid)\n          if (key) {\n            cb(null, jwkToPem(key))\n            return\n          }\n          throw new Error(\n            `Unable to find a signing key that matches '${header.kid}'`,\n          )\n        })\n        .catch(cb)\n    }\n  } else {\n    throw new Error('jwks not supported only jwks_uri')\n  }\n\n  const options: jwt.VerifyOptions = {}\n\n  const idToken: IdToken = await new Promise((resolve, reject) => {\n    jwt.verify(id_token, secretOrPublicKey, options, (error, decoded) => {\n      if (error) {\n        reject(error)\n      }\n      resolve(decoded! as IdToken)\n    })\n  })\n\n  idToken.__raw = id_token\n\n  if (nonce !== idToken.nonce) {\n    throw new Error(\"nonces don't match\")\n  }\n\n  return idToken\n}\n\nexport default verifyIdToken\n","import {\n  DomainResolver,\n  IssuerResolver,\n  DefaultIPFSResolver,\n  DefaultIssuerResolver,\n  DefaultWebFingerResolver,\n  AuthorizationCodeTokenEndpointRequest,\n  AuthorizationEndpointRequest,\n  TokenEndpointResponse,\n  Authorization,\n  AuthorizationEndpointResponse,\n} from '@uauth/common'\nimport type {Request, Response, NextFunction} from 'express'\nimport {generateCodeChallengeAndVerifier, getRandomBytes} from './util'\nimport verifyIdToken from './verifyIdToken'\n\ninterface Interaction {\n  state: string\n  nonce: string\n  verifier: string\n  tokenEndpoint: string\n  jwksUri?: string\n  jwks?: string\n}\n\ndeclare module 'express-session' {\n  interface SessionData {\n    [key: string]: any\n  }\n}\n\ninterface Locals {\n  [key: string]: any\n}\n\ndeclare module 'express' {\n  export interface Response {\n    locals: Locals\n  }\n}\n\ninterface ClientOptions {\n  clientID: string\n  clientSecret: string\n  scope: string\n  redirectUri: string\n  maxAge: number\n  clockSkew: number\n  audience?: string\n  resolution: DomainResolver\n  fallbackIssuer: string\n  createIpfsUrl: (cid: string, path: string) => string\n}\n\ntype Optional<T, K extends keyof T> = Omit<T, K> & Partial<Pick<T, K>>\n\nexport type ClientConstructorOptions = Optional<\n  ClientOptions,\n  'fallbackIssuer' | 'scope' | 'maxAge' | 'clockSkew' | 'createIpfsUrl'\n>\n\ninterface BuildAuthorizationUrlAndInteractionOptions {\n  username: string\n}\n\ninterface LoginOptions extends BuildAuthorizationUrlAndInteractionOptions {\n  beforeRedirect?(options: LoginOptions, url: string): Promise<void> | void\n}\n\ninterface ExpressSessionContext {\n  req: Request\n  res: Response\n  next: NextFunction\n}\ninterface ExpressSessionLogin {\n  login: (\n    req: Request,\n    res: Response,\n    next: NextFunction,\n    options: LoginOptions,\n  ) => Promise<void>\n  callback: (\n    req: Request,\n    res: Response,\n    next: NextFunction,\n  ) => Promise<Authorization>\n  middleware: (\n    scopes?: string[],\n  ) => (req: Request, res: Response, next: NextFunction) => void\n}\n\nclass Client {\n  public options: ClientOptions\n  public issuerResolver: IssuerResolver\n\n  constructor(options: ClientConstructorOptions) {\n    options.fallbackIssuer =\n      options.fallbackIssuer || 'https://auth.unstoppabledomains.com'\n    options.scope = options.scope || 'openid'\n    options.maxAge = options.maxAge || 600\n    options.clockSkew = options.clockSkew || 60\n\n    this.options = options as ClientOptions\n\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this\n    this.issuerResolver = new DefaultIssuerResolver({\n      webfingerResolver: new DefaultWebFingerResolver({\n        ipfsResolver: new DefaultIPFSResolver((...args) =>\n          (this.options.createIpfsUrl || DefaultIPFSResolver.defaultCreateUrl)(\n            ...args,\n          ),\n        ),\n        domainResolver: {\n          records(\n            domain: string,\n            keys: string[],\n          ): Promise<Record<string, string>> {\n            return self.options.resolution.records(domain, keys)\n          },\n        },\n      }),\n    })\n  }\n\n  createExpressSessionLogin(\n    sessionKey = 'uauth',\n    localsKey = 'uauth',\n  ): ExpressSessionLogin {\n    const {login, callback, middleware} =\n      this.createLogin<ExpressSessionContext>({\n        storeInteraction: (ctx, interaction) => {\n          ctx.req.session[sessionKey] = {interaction}\n        },\n        retrieveInteraction: ctx => ctx.req.session[sessionKey]?.interaction,\n        deleteInteraction: ctx => {\n          delete ctx.req.session[sessionKey].interaction\n        },\n        storeAuthorization: (ctx, authorization) => {\n          ctx.req.session[sessionKey] = {uauth: authorization}\n        },\n        retrieveAuthorization: ctx => ctx.req.session[sessionKey].uauth,\n        deleteAuthorization: ctx => {\n          delete ctx.req.session[sessionKey].uauth\n        },\n        retrieveAuthorizationEndpointResponse: ctx => ctx.req.body,\n        passOnAuthorization: (ctx, authorization) => {\n          ctx.res.locals[localsKey] = authorization\n          return ctx.next()\n        },\n        redirect: (ctx, url) => {\n          ctx.res.redirect(url)\n        },\n      })\n\n    return {\n      login: (req, res, next, options) => login({req, res, next}, options),\n      callback: (req: Request, res: Response, next: NextFunction) =>\n        callback({req, res, next}),\n      middleware:\n        (scopes: string[] = []) =>\n        (req: Request, res: Response, next: NextFunction) =>\n          middleware({req, res, next}, scopes),\n    }\n  }\n\n  formatUrlSearchParams(\n    endpoint: string,\n    params: Record<string, string>,\n  ): string {\n    const url = new URL(endpoint)\n\n    url.search = new URLSearchParams(\n      Object.entries(params).reduce((a, [k, v]) => {\n        if (k && v) {\n          a.push([k, v])\n        }\n        return a\n      }, [] as [string, string][]),\n    ).toString()\n\n    return url.toString()\n  }\n\n  async buildAuthorizationUrlAndInteraction(\n    options: BuildAuthorizationUrlAndInteractionOptions,\n  ): Promise<{url: string; interaction: Interaction}> {\n    const openidConfiguration = await this.issuerResolver.resolve(\n      options.username,\n      this.options.fallbackIssuer,\n    )\n\n    if (!openidConfiguration.authorization_endpoint) {\n      throw new Error('no authorization_endpoint')\n    }\n\n    const nonce = getRandomBytes(32).toString('base64')\n    const state = getRandomBytes(32).toString('base64')\n\n    const codeChallengeMethod = 'S256'\n    const {verifier, challenge} = await generateCodeChallengeAndVerifier(\n      43,\n      codeChallengeMethod,\n    )\n\n    const request: AuthorizationEndpointRequest = {\n      client_id: this.options.clientID,\n      login_hint: options.username,\n      code_challenge: challenge,\n      code_challenge_method: codeChallengeMethod,\n      nonce,\n      state,\n      max_age: this.options.maxAge,\n      resource: this.options.audience,\n      redirect_uri: this.options.redirectUri,\n      response_type: 'code',\n      response_mode: 'form_post',\n      scope: this.options.scope,\n      prompt: 'login',\n    }\n\n    const interaction: Interaction = {\n      nonce,\n      state,\n      verifier,\n      tokenEndpoint: openidConfiguration.token_endpoint!,\n      jwksUri: openidConfiguration.jwks_uri,\n      jwks: openidConfiguration.jwks as any,\n    }\n\n    return {\n      url: this.formatUrlSearchParams(\n        openidConfiguration.authorization_endpoint,\n        request,\n      ),\n      interaction,\n    }\n  }\n\n  async authorizationCodeGrantExchange(\n    interaction: Interaction,\n    authorizationEndpointResponse: AuthorizationEndpointResponse,\n  ): Promise<Authorization> {\n    if (authorizationEndpointResponse.state !== interaction.state) {\n      throw new Error('invalid state')\n    }\n\n    const tokenRequest: AuthorizationCodeTokenEndpointRequest = {\n      client_id: this.options.clientID,\n      client_secret: this.options.clientSecret,\n      code: authorizationEndpointResponse.code,\n      code_verifier: interaction.verifier,\n      grant_type: 'authorization_code',\n      redirect_uri: this.options.redirectUri,\n    }\n\n    const tokenResponse: TokenEndpointResponse = await fetch(\n      interaction.tokenEndpoint,\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        body: new URLSearchParams(tokenRequest).toString(),\n      },\n    ).then(async resp =>\n      resp.ok ? resp.json() : Promise.reject(await resp.json()),\n    )\n\n    const idToken = await verifyIdToken(\n      interaction.jwksUri,\n      interaction.jwks,\n      tokenResponse.id_token!,\n      interaction.nonce,\n    )\n\n    // Verifiy token\n    const expiresAt = Date.now() + tokenResponse.expires_in * 1000\n    const authorization: Authorization = {\n      accessToken: tokenResponse.access_token,\n      idToken,\n      expiresAt,\n      scope: tokenResponse.scope,\n      audience: this.options.audience,\n    }\n\n    return authorization\n  }\n\n  validateAuthorization(\n    authorization: Authorization | undefined,\n    scopes: string[] = [],\n  ) {\n    if (!authorization) {\n      throw new Error('no authorization present')\n    }\n\n    if (\n      authorization.audience &&\n      this.options.audience !== authorization.audience\n    ) {\n      throw new Error('incorrect audience for token')\n    }\n\n    if (\n      scopes.length > 0 &&\n      !authorization.scope.split(/\\s+/).some(v => scopes.includes(v))\n    ) {\n      throw new Error('scope not allowed')\n    }\n\n    if (authorization.expiresAt < Date.now()) {\n      throw new Error('authorization has expired')\n    }\n  }\n\n  createLogin<T>(actions: {\n    storeInteraction: (ctx: T, interaction: Interaction) => void | Promise<void>\n    retrieveInteraction: (\n      ctx: T,\n    ) => Interaction | undefined | Promise<Interaction | undefined>\n    deleteInteraction: (ctx: T) => void | Promise<void>\n    storeAuthorization: (\n      ctx: T,\n      authorization: Authorization,\n    ) => void | Promise<void>\n    retrieveAuthorization: (\n      ctx: T,\n    ) => Authorization | undefined | Promise<Authorization | undefined>\n    deleteAuthorization: (ctx: T) => void | Promise<void>\n    retrieveAuthorizationEndpointResponse: (\n      ctx: T,\n    ) => AuthorizationEndpointResponse\n    passOnAuthorization: (ctx: T, authorization: Authorization) => void\n    redirect: (ctx: T, url: string) => void | Promise<void>\n  }): {\n    login(ctx: T, options: LoginOptions): Promise<void>\n    callback(ctx: T): Promise<Authorization>\n    middleware(ctx: T, scopes?: string[]): void\n  } {\n    return {\n      login: async (ctx, options) => {\n        const {url, interaction} =\n          await this.buildAuthorizationUrlAndInteraction(options)\n\n        await actions.storeInteraction(ctx, interaction)\n\n        if (typeof options.beforeRedirect === 'function') {\n          await options.beforeRedirect(options, url)\n        }\n\n        return actions.redirect(ctx, url)\n      },\n      callback: async ctx => {\n        const interaction = await actions.retrieveInteraction(ctx)\n\n        if (!interaction) {\n          throw new Error('no interaction')\n        }\n\n        await actions.deleteInteraction(ctx)\n\n        const response = await actions.retrieveAuthorizationEndpointResponse(\n          ctx,\n        )\n\n        if ((response as any).error) {\n          throw new Error(\n            `${(response as any).error}: ${\n              (response as any).error_description\n            }`,\n          )\n        }\n\n        const authorization = await this.authorizationCodeGrantExchange(\n          interaction,\n          response,\n        )\n\n        await actions.storeAuthorization(ctx, authorization)\n\n        return authorization\n      },\n      middleware: async (ctx, scopes?: string[]) => {\n        const authorization = await actions.retrieveAuthorization(ctx)\n\n        try {\n          this.validateAuthorization(authorization, scopes)\n        } catch (error) {\n          await actions.deleteAuthorization(ctx)\n\n          throw error\n        }\n\n        return actions.passOnAuthorization(ctx, authorization!)\n      },\n    }\n  }\n}\n\nexport default Client\n"],"names":["getRandomBytes","length","randomBytes","pkceMask","generateCodeVerifier","Array","from","map","v","join","generateCodeChallengeAndVerifier","method","verifier","challenge","toUrlEncodedBase64","sha256","Error","s","createHash","update","TextEncoder","encode","digest","buffer","toBase64","buf","Buffer","toString","replace","TextDecoder","verifyIdToken","jwks_uri","jwks","id_token","nonce","secretOrPublicKey","header","cb","fetch","then","res","json","keys","key","find","k","kid","jwkToPem","catch","options","idToken","Promise","resolve","reject","jwt","verify","error","decoded","__raw","Client","constructor","issuerResolver","fallbackIssuer","scope","maxAge","clockSkew","self","DefaultIssuerResolver","webfingerResolver","DefaultWebFingerResolver","ipfsResolver","DefaultIPFSResolver","args","createIpfsUrl","defaultCreateUrl","domainResolver","records","domain","resolution","createExpressSessionLogin","sessionKey","localsKey","login","callback","middleware","createLogin","storeInteraction","ctx","interaction","req","session","retrieveInteraction","deleteInteraction","storeAuthorization","authorization","uauth","retrieveAuthorization","deleteAuthorization","retrieveAuthorizationEndpointResponse","body","passOnAuthorization","locals","next","redirect","url","scopes","formatUrlSearchParams","endpoint","params","URL","search","URLSearchParams","Object","entries","reduce","a","push","buildAuthorizationUrlAndInteraction","openidConfiguration","username","authorization_endpoint","state","codeChallengeMethod","request","client_id","clientID","login_hint","code_challenge","code_challenge_method","max_age","resource","audience","redirect_uri","redirectUri","response_type","response_mode","prompt","tokenEndpoint","token_endpoint","jwksUri","authorizationCodeGrantExchange","authorizationEndpointResponse","tokenRequest","client_secret","clientSecret","code","code_verifier","grant_type","tokenResponse","headers","resp","ok","expiresAt","Date","now","expires_in","accessToken","access_token","validateAuthorization","split","some","includes","actions","beforeRedirect","response","error_description"],"mappings":";;;;;;;;;;AAEO,MAAMA,cAAc,GAAIC,MAAD,IAAoBC,kBAAW,CAACD,MAAD,CAAtD,CAAA;AAEP,MAAME,QAAQ,GACZ,oEADF,CAAA;;AAGA,MAAMC,oBAAoB,GAAIH,MAAD,IAAmB;AAC9C,EAAOI,OAAAA,KAAK,CAACC,IAAN,CAAWN,cAAc,CAACC,MAAD,CAAzB,CACJM,CAAAA,GADI,CACAC,CAAC,IAAIL,QAAQ,CAACK,CAAC,GAAGL,QAAQ,CAACF,MAAd,CADb,CAEJQ,CAAAA,IAFI,CAEC,EAFD,CAAP,CAAA;AAGD,CAJD,CAAA;;AAMO,MAAMC,gCAAgC,GAAG,OAC9CT,MAAM,GAAG,EADqC,EAE9CU,MAAM,GAAG,MAFqC,KAGI;AAClD,EAAA,MAAMC,QAAQ,GAAGR,oBAAoB,CAACH,MAAD,CAArC,CAAA;;AAEA,EAAA,QAAQU,MAAR;AACE,IAAA,KAAK,OAAL;AACE,MAAO,OAAA;AAACC,QAAAA,QAAD;AAAWC,QAAAA,SAAS,EAAED,QAAAA;AAAtB,OAAP,CAAA;;AACF,IAAA,KAAK,MAAL;AACE,MAAO,OAAA;AAACA,QAAAA,QAAD;AAAWC,QAAAA,SAAS,EAAEC,kBAAkB,CAACC,MAAM,CAACH,QAAD,CAAP,CAAA;AAAxC,OAAP,CAAA;;AACF,IAAA;AACE,MAAA,MAAM,IAAII,KAAJ,CAAU,sBAAV,CAAN,CAAA;AANJ,GAAA;AAQD,CAdM,CAAA;AAgBA,MAAMD,MAAM,GAAIE,CAAD,IAA2B;AAC/C,EAAA,OAAOC,iBAAU,CAAC,QAAD,CAAV,CAAqBC,MAArB,CAA4B,IAAIC,WAAJ,EAAA,CAAkBC,MAAlB,CAAyBJ,CAAzB,CAA5B,CAAyDK,CAAAA,MAAzD,GACJC,MADH,CAAA;AAED,CAHM,CAAA;AAKA,MAAMC,QAAQ,GAAIC,GAAD,IAAqB;AAC3C,EAAOC,OAAAA,MAAM,CAACpB,IAAP,CAAYmB,GAAZ,CAAiBE,CAAAA,QAAjB,CAA0B,QAA1B,CAAP,CAAA;AACD,CAFM,CAAA;AAIA,MAAMb,kBAAkB,GAAIW,GAAD,IAAqB;AACrD,EAAOD,OAAAA,QAAQ,CAACC,GAAD,CAAR,CAAcG,OAAd,CAAsB,IAAtB,EAA4B,EAA5B,CAAA,CAAgCA,OAAhC,CAAwC,KAAxC,EAA+C,GAA/C,CAAA,CAAoDA,OAApD,CAA4D,KAA5D,EAAmE,GAAnE,CAAP,CAAA;AACD,CAFM,CAAA;AAIoB,IAAIR,WAAJ,GAApB;AACoB,IAAIS,WAAJ;;ACvC3B,MAAMC,aAAa,GAAG,OACpBC,QADoB,EAEpBC,IAFoB,EAGpBC,QAHoB,EAIpBC,KAJoB,KAKA;AACpB,EAAA,IAAIC,iBAAJ,CAAA;;AACA,EAAA,IAAIJ,QAAJ,EAAc;AACZI,IAAAA,iBAAiB,GAAG,CAACC,MAAD,EAASC,EAAT,KAAe;AACjCC,MAAAA,KAAK,CAACP,QAAD,CAAL,CACGQ,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,CAEGF,CAAAA,IAFH,CAEQ,CAAC;AAACG,QAAAA,IAAAA;AAAD,OAAD,KAAW;AACf,QAAA,MAAMC,GAAG,GAAGD,IAAI,CAACE,IAAL,CAAUC,CAAC,IAAIA,CAAC,CAACC,GAAF,KAAUV,MAAM,CAACU,GAAhC,CAAZ,CAAA;;AACA,QAAA,IAAIH,GAAJ,EAAS;AACPN,UAAAA,EAAE,CAAC,IAAD,EAAOU,4BAAQ,CAACJ,GAAD,CAAf,CAAF,CAAA;AACA,UAAA,OAAA;AACD,SAAA;;AACD,QAAM,MAAA,IAAI3B,KAAJ,CACJ,CAAA,2CAAA,EAA8CoB,MAAM,CAACU,GAAM,GADvD,CAAN,CAAA;AAGD,OAXH,CAAA,CAYGE,KAZH,CAYSX,EAZT,CAAA,CAAA;AAaD,KAdD,CAAA;AAeD,GAhBD,MAgBO;AACL,IAAA,MAAM,IAAIrB,KAAJ,CAAU,kCAAV,CAAN,CAAA;AACD,GAAA;;AAED,EAAMiC,MAAAA,OAAO,GAAsB,EAAnC,CAAA;AAEA,EAAMC,MAAAA,OAAO,GAAY,MAAM,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAoB;AAC7DC,IAAAA,uBAAG,CAACC,MAAJ,CAAWtB,QAAX,EAAqBE,iBAArB,EAAwCc,OAAxC,EAAiD,CAACO,KAAD,EAAQC,OAAR,KAAmB;AAClE,MAAA,IAAID,KAAJ,EAAW;AACTH,QAAAA,MAAM,CAACG,KAAD,CAAN,CAAA;AACD,OAAA;;AACDJ,MAAAA,OAAO,CAACK,OAAD,CAAP,CAAA;AACD,KALD,CAAA,CAAA;AAMD,GAP8B,CAA/B,CAAA;AASAP,EAAAA,OAAO,CAACQ,KAAR,GAAgBzB,QAAhB,CAAA;;AAEA,EAAA,IAAIC,KAAK,KAAKgB,OAAO,CAAChB,KAAtB,EAA6B;AAC3B,IAAA,MAAM,IAAIlB,KAAJ,CAAU,oBAAV,CAAN,CAAA;AACD,GAAA;;AAED,EAAA,OAAOkC,OAAP,CAAA;AACD,CA7CD;;ACuFA,MAAMS,MAAN,CAAY;AAIVC,EAAAA,WAAA,CAAYX,OAAZ,EAA6C;AAAA,IAAA,IAAA,CAHtCA,OAGsC,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAAA,CAFtCY,cAEsC,GAAA,KAAA,CAAA,CAAA;AAC3CZ,IAAAA,OAAO,CAACa,cAAR,GACEb,OAAO,CAACa,cAAR,IAA0B,qCAD5B,CAAA;AAEAb,IAAAA,OAAO,CAACc,KAAR,GAAgBd,OAAO,CAACc,KAAR,IAAiB,QAAjC,CAAA;AACAd,IAAAA,OAAO,CAACe,MAAR,GAAiBf,OAAO,CAACe,MAAR,IAAkB,GAAnC,CAAA;AACAf,IAAAA,OAAO,CAACgB,SAAR,GAAoBhB,OAAO,CAACgB,SAAR,IAAqB,EAAzC,CAAA;AAEA,IAAA,IAAA,CAAKhB,OAAL,GAAeA,OAAf,CAP2C;;AAU3C,IAAMiB,MAAAA,IAAI,GAAG,IAAb,CAAA;AACA,IAAA,IAAA,CAAKL,cAAL,GAAsB,IAAIM,4BAAJ,CAA0B;AAC9CC,MAAAA,iBAAiB,EAAE,IAAIC,+BAAJ,CAA6B;AAC9CC,QAAAA,YAAY,EAAE,IAAIC,0BAAJ,CAAwB,CAAC,GAAGC,IAAJ,KACpC,CAAC,IAAA,CAAKvB,OAAL,CAAawB,aAAb,IAA8BF,0BAAmB,CAACG,gBAAnD,EACE,GAAGF,IADL,CADY,CADgC;AAM9CG,QAAAA,cAAc,EAAE;AACdC,UAAAA,OAAO,CACLC,MADK,EAELnC,IAFK,EAES;AAEd,YAAOwB,OAAAA,IAAI,CAACjB,OAAL,CAAa6B,UAAb,CAAwBF,OAAxB,CAAgCC,MAAhC,EAAwCnC,IAAxC,CAAP,CAAA;AACD,WAAA;;AANa,SAAA;AAN8B,OAA7B,CAAA;AAD2B,KAA1B,CAAtB,CAAA;AAiBD,GAAA;;AAEDqC,EAAAA,yBAAyB,CACvBC,UAAU,GAAG,OADU,EAEvBC,SAAS,GAAG,OAFW,EAEJ;AAEnB,IAAM,MAAA;AAACC,MAAAA,KAAD;AAAQC,MAAAA,QAAR;AAAkBC,MAAAA,UAAAA;AAAlB,KACJ,GAAA,IAAA,CAAKC,WAAL,CAAwC;AACtCC,MAAAA,gBAAgB,EAAE,CAACC,GAAD,EAAMC,WAAN,KAAqB;AACrCD,QAAAA,GAAG,CAACE,GAAJ,CAAQC,OAAR,CAAgBV,UAAhB,CAA8B,GAAA;AAACQ,UAAAA,WAAAA;AAAD,SAA9B,CAAA;AACD,OAHqC;AAItCG,MAAAA,mBAAmB,EAAEJ,GAAG,IAAA;AAAA,QAAA,IAAA,qBAAA,CAAA;;AAAA,QAAIA,OAAAA,CAAAA,qBAAAA,GAAAA,GAAG,CAACE,GAAJ,CAAQC,OAAR,CAAgBV,UAAhB,CAAJ,KAAI,IAAA,GAAA,KAAA,CAAA,GAAA,qBAAA,CAA6BQ,WAAjC,CAAA;AAAA,OAJc;AAKtCI,MAAAA,iBAAiB,EAAEL,GAAG,IAAG;AACvB,QAAOA,OAAAA,GAAG,CAACE,GAAJ,CAAQC,OAAR,CAAgBV,UAAhB,EAA4BQ,WAAnC,CAAA;AACD,OAPqC;AAQtCK,MAAAA,kBAAkB,EAAE,CAACN,GAAD,EAAMO,aAAN,KAAuB;AACzCP,QAAAA,GAAG,CAACE,GAAJ,CAAQC,OAAR,CAAgBV,UAAhB,CAA8B,GAAA;AAACe,UAAAA,KAAK,EAAED,aAAAA;AAAR,SAA9B,CAAA;AACD,OAVqC;AAWtCE,MAAAA,qBAAqB,EAAET,GAAG,IAAIA,GAAG,CAACE,GAAJ,CAAQC,OAAR,CAAgBV,UAAhB,CAAA,CAA4Be,KAXpB;AAYtCE,MAAAA,mBAAmB,EAAEV,GAAG,IAAG;AACzB,QAAOA,OAAAA,GAAG,CAACE,GAAJ,CAAQC,OAAR,CAAgBV,UAAhB,EAA4Be,KAAnC,CAAA;AACD,OAdqC;AAetCG,MAAAA,qCAAqC,EAAEX,GAAG,IAAIA,GAAG,CAACE,GAAJ,CAAQU,IAfhB;AAgBtCC,MAAAA,mBAAmB,EAAE,CAACb,GAAD,EAAMO,aAAN,KAAuB;AAC1CP,QAAAA,GAAG,CAAC/C,GAAJ,CAAQ6D,MAAR,CAAepB,SAAf,IAA4Ba,aAA5B,CAAA;AACA,QAAOP,OAAAA,GAAG,CAACe,IAAJ,EAAP,CAAA;AACD,OAnBqC;AAoBtCC,MAAAA,QAAQ,EAAE,CAAChB,GAAD,EAAMiB,GAAN,KAAa;AACrBjB,QAAAA,GAAG,CAAC/C,GAAJ,CAAQ+D,QAAR,CAAiBC,GAAjB,CAAA,CAAA;AACD,OAAA;AAtBqC,KAAxC,CADF,CAAA;AA0BA,IAAO,OAAA;AACLtB,MAAAA,KAAK,EAAE,CAACO,GAAD,EAAMjD,GAAN,EAAW8D,IAAX,EAAiBrD,OAAjB,KAA6BiC,KAAK,CAAC;AAACO,QAAAA,GAAD;AAAMjD,QAAAA,GAAN;AAAW8D,QAAAA,IAAAA;AAAX,OAAD,EAAmBrD,OAAnB,CADpC;AAELkC,MAAAA,QAAQ,EAAE,CAACM,GAAD,EAAejD,GAAf,EAA8B8D,IAA9B,KACRnB,QAAQ,CAAC;AAACM,QAAAA,GAAD;AAAMjD,QAAAA,GAAN;AAAW8D,QAAAA,IAAAA;AAAX,OAAD,CAHL;AAILlB,MAAAA,UAAU,EACR,CAACqB,MAAA,GAAmB,EAApB,KACA,CAAChB,GAAD,EAAejD,GAAf,EAA8B8D,IAA9B,KACElB,UAAU,CAAC;AAACK,QAAAA,GAAD;AAAMjD,QAAAA,GAAN;AAAW8D,QAAAA,IAAAA;AAAX,OAAD,EAAmBG,MAAnB,CAAA;AAPT,KAAP,CAAA;AASD,GAAA;;AAEDC,EAAAA,qBAAqB,CACnBC,QADmB,EAEnBC,MAFmB,EAEW;AAE9B,IAAA,MAAMJ,GAAG,GAAG,IAAIK,GAAJ,CAAQF,QAAR,CAAZ,CAAA;AAEAH,IAAAA,GAAG,CAACM,MAAJ,GAAa,IAAIC,eAAJ,CACXC,MAAM,CAACC,OAAP,CAAeL,MAAf,CAAuBM,CAAAA,MAAvB,CAA8B,CAACC,CAAD,EAAI,CAACtE,CAAD,EAAIrC,CAAJ,CAAJ,KAAc;AAC1C,MAAIqC,IAAAA,CAAC,IAAIrC,CAAT,EAAY;AACV2G,QAAAA,CAAC,CAACC,IAAF,CAAO,CAACvE,CAAD,EAAIrC,CAAJ,CAAP,CAAA,CAAA;AACD,OAAA;;AACD,MAAA,OAAO2G,CAAP,CAAA;AACD,KALD,EAKG,EALH,CADW,CAAA,CAOXxF,QAPW,EAAb,CAAA;AASA,IAAO6E,OAAAA,GAAG,CAAC7E,QAAJ,EAAP,CAAA;AACD,GAAA;;AAEwC,EAAnC0F,MAAAA,mCAAmC,CACvCpE,OADuC,EACY;AAEnD,IAAA,MAAMqE,mBAAmB,GAAG,MAAM,IAAKzD,CAAAA,cAAL,CAAoBT,OAApB,CAChCH,OAAO,CAACsE,QADwB,EAEhC,IAAA,CAAKtE,OAAL,CAAaa,cAFmB,CAAlC,CAAA;;AAKA,IAAA,IAAI,CAACwD,mBAAmB,CAACE,sBAAzB,EAAiD;AAC/C,MAAA,MAAM,IAAIxG,KAAJ,CAAU,2BAAV,CAAN,CAAA;AACD,KAAA;;AAED,IAAMkB,MAAAA,KAAK,GAAGlC,cAAc,CAAC,EAAD,CAAd,CAAmB2B,QAAnB,CAA4B,QAA5B,CAAd,CAAA;AACA,IAAM8F,MAAAA,KAAK,GAAGzH,cAAc,CAAC,EAAD,CAAd,CAAmB2B,QAAnB,CAA4B,QAA5B,CAAd,CAAA;AAEA,IAAM+F,MAAAA,mBAAmB,GAAG,MAA5B,CAAA;AACA,IAAM,MAAA;AAAC9G,MAAAA,QAAD;AAAWC,MAAAA,SAAAA;AAAX,KAAA,GAAwB,MAAMH,gCAAgC,CAClE,EADkE,EAElEgH,mBAFkE,CAApE,CAAA;AAKA,IAAA,MAAMC,OAAO,GAAiC;AAC5CC,MAAAA,SAAS,EAAE,IAAK3E,CAAAA,OAAL,CAAa4E,QADoB;AAE5CC,MAAAA,UAAU,EAAE7E,OAAO,CAACsE,QAFwB;AAG5CQ,MAAAA,cAAc,EAAElH,SAH4B;AAI5CmH,MAAAA,qBAAqB,EAAEN,mBAJqB;AAK5CxF,MAAAA,KAL4C;AAM5CuF,MAAAA,KAN4C;AAO5CQ,MAAAA,OAAO,EAAE,IAAKhF,CAAAA,OAAL,CAAae,MAPsB;AAQ5CkE,MAAAA,QAAQ,EAAE,IAAKjF,CAAAA,OAAL,CAAakF,QARqB;AAS5CC,MAAAA,YAAY,EAAE,IAAKnF,CAAAA,OAAL,CAAaoF,WATiB;AAU5CC,MAAAA,aAAa,EAAE,MAV6B;AAW5CC,MAAAA,aAAa,EAAE,WAX6B;AAY5CxE,MAAAA,KAAK,EAAE,IAAKd,CAAAA,OAAL,CAAac,KAZwB;AAa5CyE,MAAAA,MAAM,EAAE,OAAA;AAboC,KAA9C,CAAA;AAgBA,IAAA,MAAMhD,WAAW,GAAgB;AAC/BtD,MAAAA,KAD+B;AAE/BuF,MAAAA,KAF+B;AAG/B7G,MAAAA,QAH+B;AAI/B6H,MAAAA,aAAa,EAAEnB,mBAAmB,CAACoB,cAJJ;AAK/BC,MAAAA,OAAO,EAAErB,mBAAmB,CAACvF,QALE;AAM/BC,MAAAA,IAAI,EAAEsF,mBAAmB,CAACtF,IAAAA;AANK,KAAjC,CAAA;AASA,IAAO,OAAA;AACLwE,MAAAA,GAAG,EAAE,IAAA,CAAKE,qBAAL,CACHY,mBAAmB,CAACE,sBADjB,EAEHG,OAFG,CADA;AAKLnC,MAAAA,WAAAA;AALK,KAAP,CAAA;AAOD,GAAA;;AAEmC,EAAA,MAA9BoD,8BAA8B,CAClCpD,WADkC,EAElCqD,6BAFkC,EAE0B;AAE5D,IAAA,IAAIA,6BAA6B,CAACpB,KAA9B,KAAwCjC,WAAW,CAACiC,KAAxD,EAA+D;AAC7D,MAAA,MAAM,IAAIzG,KAAJ,CAAU,eAAV,CAAN,CAAA;AACD,KAAA;;AAED,IAAA,MAAM8H,YAAY,GAA0C;AAC1DlB,MAAAA,SAAS,EAAE,IAAK3E,CAAAA,OAAL,CAAa4E,QADkC;AAE1DkB,MAAAA,aAAa,EAAE,IAAK9F,CAAAA,OAAL,CAAa+F,YAF8B;AAG1DC,MAAAA,IAAI,EAAEJ,6BAA6B,CAACI,IAHsB;AAI1DC,MAAAA,aAAa,EAAE1D,WAAW,CAAC5E,QAJ+B;AAK1DuI,MAAAA,UAAU,EAAE,oBAL8C;AAM1Df,MAAAA,YAAY,EAAE,IAAKnF,CAAAA,OAAL,CAAaoF,WAAAA;AAN+B,KAA5D,CAAA;AASA,IAAMe,MAAAA,aAAa,GAA0B,MAAM9G,KAAK,CACtDkD,WAAW,CAACiD,aAD0C,EAEtD;AACE9H,MAAAA,MAAM,EAAE,MADV;AAEE0I,MAAAA,OAAO,EAAE;AACP,QAAgB,cAAA,EAAA,mCAAA;AADT,OAFX;AAKElD,MAAAA,IAAI,EAAE,IAAIY,eAAJ,CAAoB+B,YAApB,EAAkCnH,QAAlC,EAAA;AALR,KAFsD,CAAL,CASjDY,IATiD,CAS5C,MAAM+G,IAAN,IACLA,IAAI,CAACC,EAAL,GAAUD,IAAI,CAAC7G,IAAL,EAAV,GAAwBU,OAAO,CAACE,MAAR,CAAe,MAAMiG,IAAI,CAAC7G,IAAL,EAArB,CAVyB,CAAnD,CAAA;AAaA,IAAMS,MAAAA,OAAO,GAAG,MAAMpB,aAAa,CACjC0D,WAAW,CAACmD,OADqB,EAEjCnD,WAAW,CAACxD,IAFqB,EAGjCoH,aAAa,CAACnH,QAHmB,EAIjCuD,WAAW,CAACtD,KAJqB,CAAnC,CA5B4D;;AAoC5D,IAAMsH,MAAAA,SAAS,GAAGC,IAAI,CAACC,GAAL,KAAaN,aAAa,CAACO,UAAd,GAA2B,IAA1D,CAAA;AACA,IAAA,MAAM7D,aAAa,GAAkB;AACnC8D,MAAAA,WAAW,EAAER,aAAa,CAACS,YADQ;AAEnC3G,MAAAA,OAFmC;AAGnCsG,MAAAA,SAHmC;AAInCzF,MAAAA,KAAK,EAAEqF,aAAa,CAACrF,KAJc;AAKnCoE,MAAAA,QAAQ,EAAE,IAAKlF,CAAAA,OAAL,CAAakF,QAAAA;AALY,KAArC,CAAA;AAQA,IAAA,OAAOrC,aAAP,CAAA;AACD,GAAA;;AAEDgE,EAAAA,qBAAqB,CACnBhE,aADmB,EAEnBW,MAAA,GAAmB,EAFA,EAEE;AAErB,IAAI,IAAA,CAACX,aAAL,EAAoB;AAClB,MAAA,MAAM,IAAI9E,KAAJ,CAAU,0BAAV,CAAN,CAAA;AACD,KAAA;;AAED,IAAA,IACE8E,aAAa,CAACqC,QAAd,IACA,IAAKlF,CAAAA,OAAL,CAAakF,QAAb,KAA0BrC,aAAa,CAACqC,QAF1C,EAGE;AACA,MAAA,MAAM,IAAInH,KAAJ,CAAU,8BAAV,CAAN,CAAA;AACD,KAAA;;AAED,IACEyF,IAAAA,MAAM,CAACxG,MAAP,GAAgB,CAAhB,IACA,CAAC6F,aAAa,CAAC/B,KAAd,CAAoBgG,KAApB,CAA0B,KAA1B,CAAiCC,CAAAA,IAAjC,CAAsCxJ,CAAC,IAAIiG,MAAM,CAACwD,QAAP,CAAgBzJ,CAAhB,CAA3C,CAFH,EAGE;AACA,MAAA,MAAM,IAAIQ,KAAJ,CAAU,mBAAV,CAAN,CAAA;AACD,KAAA;;AAED,IAAI8E,IAAAA,aAAa,CAAC0D,SAAd,GAA0BC,IAAI,CAACC,GAAL,EAA9B,EAA0C;AACxC,MAAA,MAAM,IAAI1I,KAAJ,CAAU,2BAAV,CAAN,CAAA;AACD,KAAA;AACF,GAAA;;AAEDqE,EAAAA,WAAW,CAAI6E,OAAJ,EAmBV;AAKC,IAAO,OAAA;AACLhF,MAAAA,KAAK,EAAE,OAAOK,GAAP,EAAYtC,OAAZ,KAAuB;AAC5B,QAAM,MAAA;AAACuD,UAAAA,GAAD;AAAMhB,UAAAA,WAAAA;AAAN,SAAA,GACJ,MAAM,IAAA,CAAK6B,mCAAL,CAAyCpE,OAAzC,CADR,CAAA;AAGA,QAAA,MAAMiH,OAAO,CAAC5E,gBAAR,CAAyBC,GAAzB,EAA8BC,WAA9B,CAAN,CAAA;;AAEA,QAAA,IAAI,OAAOvC,OAAO,CAACkH,cAAf,KAAkC,UAAtC,EAAkD;AAChD,UAAA,MAAMlH,OAAO,CAACkH,cAAR,CAAuBlH,OAAvB,EAAgCuD,GAAhC,CAAN,CAAA;AACD,SAAA;;AAED,QAAA,OAAO0D,OAAO,CAAC3D,QAAR,CAAiBhB,GAAjB,EAAsBiB,GAAtB,CAAP,CAAA;AACD,OAZI;AAaLrB,MAAAA,QAAQ,EAAE,MAAMI,GAAN,IAAY;AACpB,QAAMC,MAAAA,WAAW,GAAG,MAAM0E,OAAO,CAACvE,mBAAR,CAA4BJ,GAA5B,CAA1B,CAAA;;AAEA,QAAI,IAAA,CAACC,WAAL,EAAkB;AAChB,UAAA,MAAM,IAAIxE,KAAJ,CAAU,gBAAV,CAAN,CAAA;AACD,SAAA;;AAED,QAAA,MAAMkJ,OAAO,CAACtE,iBAAR,CAA0BL,GAA1B,CAAN,CAAA;AAEA,QAAM6E,MAAAA,QAAQ,GAAG,MAAMF,OAAO,CAAChE,qCAAR,CACrBX,GADqB,CAAvB,CAAA;;AAIA,QAAK6E,IAAAA,QAAgB,CAAC5G,KAAtB,EAA6B;AAC3B,UAAA,MAAM,IAAIxC,KAAJ,CACJ,CAAA,EAAIoJ,QAAgB,CAAC5G,KAAK,CAAA,EAAA,EACvB4G,QAAgB,CAACC,iBACpB,CAAA,CAHI,CAAN,CAAA;AAKD,SAAA;;AAED,QAAMvE,MAAAA,aAAa,GAAG,MAAM,IAAA,CAAK8C,8BAAL,CAC1BpD,WAD0B,EAE1B4E,QAF0B,CAA5B,CAAA;AAKA,QAAA,MAAMF,OAAO,CAACrE,kBAAR,CAA2BN,GAA3B,EAAgCO,aAAhC,CAAN,CAAA;AAEA,QAAA,OAAOA,aAAP,CAAA;AACD,OA1CI;AA2CLV,MAAAA,UAAU,EAAE,OAAOG,GAAP,EAAYkB,MAAZ,KAAiC;AAC3C,QAAMX,MAAAA,aAAa,GAAG,MAAMoE,OAAO,CAAClE,qBAAR,CAA8BT,GAA9B,CAA5B,CAAA;;AAEA,QAAI,IAAA;AACF,UAAA,IAAA,CAAKuE,qBAAL,CAA2BhE,aAA3B,EAA0CW,MAA1C,CAAA,CAAA;AACD,SAFD,CAEE,OAAOjD,KAAP,EAAc;AACd,UAAA,MAAM0G,OAAO,CAACjE,mBAAR,CAA4BV,GAA5B,CAAN,CAAA;AAEA,UAAA,MAAM/B,KAAN,CAAA;AACD,SAAA;;AAED,QAAA,OAAO0G,OAAO,CAAC9D,mBAAR,CAA4Bb,GAA5B,EAAiCO,aAAjC,CAAP,CAAA;AACD,OAAA;AAvDI,KAAP,CAAA;AAyDD,GAAA;;AAlTS;;;;"}